import globals from "globals";
import js from "@eslint/js";
import prettierConfig from "eslint-config-prettier";
import importPlugin from "eslint-plugin-import";
import prettierPlugin from "eslint-plugin-prettier";
import reactPlugin from "eslint-plugin-react";
import reactHooksPlugin from "eslint-plugin-react-hooks";
import reactRefreshPlugin from "eslint-plugin-react-refresh";
import simpleImportSortPlugin from "eslint-plugin-simple-import-sort";
import unusedImportsPlugin from "eslint-plugin-unused-imports";
import tsParser from "@typescript-eslint/parser";
import tsPlugin from "@typescript-eslint/eslint-plugin";

export default [
  js.configs.recommended,
  prettierConfig,
  {
    files: ["**/*.{js,jsx,ts,tsx}"],
    languageOptions: {
      ecmaVersion: "latest",
      sourceType: "module",
      globals: {
        ...globals.browser,
        ...globals.node,
      },
      parser: tsParser,
      parserOptions: {
        ecmaFeatures: {
          jsx: true,
        },
        project: ["./tsconfig.json", "./apps/*/tsconfig.json", "./packages/*/tsconfig.json"],
      },
    },
    plugins: {
      import: importPlugin,
      prettier: prettierPlugin,
      react: reactPlugin,
      "react-hooks": reactHooksPlugin,
      "react-refresh": reactRefreshPlugin,
      "simple-import-sort": simpleImportSortPlugin,
      "unused-imports": unusedImportsPlugin,
      "@typescript-eslint": tsPlugin,
    },
    rules: {
      ...importPlugin.configs.recommended.rules,
      ...tsPlugin.configs["eslint-recommended"].rules,
      ...tsPlugin.configs.recommended.rules,
      ...tsPlugin.configs["stylistic-type-checked"].rules,
      ...reactPlugin.configs.recommended.rules,
      ...reactHooksPlugin.configs.recommended.rules,
      "prettier/prettier": "error",
      "react/react-in-jsx-scope": "off",
      "react-refresh/only-export-components": [
        "warn",
        { allowConstantExport: true },
      ],
      "simple-import-sort/imports": "error",
      "simple-import-sort/exports": "error",
      "unused-imports/no-unused-imports": "error",
      "unused-imports/no-unnecessary-imports": "error",
      "import/no-unresolved": "off",
      "import/named": "off",
      "import/namespace": "off",
      "import/default": "off",
      "import/no-named-as-default-member": "off",
      "import/no-named-as-default": "off",
      "import/no-duplicates": "error",
      "import/order": "off",
      "@typescript-eslint/no-unused-vars": [
        "warn",
        { argsIgnorePattern: "^_", varsIgnorePattern: "^_" },
      ],
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/no-non-null-assertion": "off",
      "@typescript-eslint/ban-ts-comment": "off",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-var-requires": "off",
      "@typescript-eslint/no-this-alias": "off",
      "@typescript-eslint/no-inferrable-types": "off",
      "@typescript-eslint/prefer-as-const": "warn",
      "@typescript-eslint/consistent-type-imports": "warn",
      "@typescript-eslint/consistent-type-exports": "warn",
      "@typescript-eslint/no-misused-promises": "off",
      "@typescript-eslint/restrict-template-expressions": "off",
      "@typescript-eslint/no-floating-promises": "off",
      "@typescript-eslint/no-unsafe-assignment": "off",
      "@typescript-eslint/no-unsafe-member-access": "off",
      "@typescript-eslint/no-unsafe-call": "off",
      "@typescript-eslint/no-unsafe-return": "off",
      "@typescript-eslint/no-unsafe-argument": "off",
    },
    settings: {
      react: {
        version: "detect",
      },
    },
  },
  {
    files: ["**/*.svelte"],
    languageOptions: {
      parser: "svelte-eslint-parser",
      parserOptions: {
        parser: tsParser,
      },
    },
    plugins: {
      svelte: "eslint-plugin-svelte",
    },
    rules: {
      "svelte/no-unused-imports": "error",
      "svelte/no-at-html-tags": "off",
      "svelte/valid-compile": "off",
      "svelte/no-inner-declarations": "off",
      "svelte/prefer-class-directive": "off",
      "svelte/prefer-style-directive": "off",
      "svelte/no-unused-svelte-ignore": "off",
      "svelte/no-reactive-reassign": "off",
      "svelte/no-dupe-else-if": "off",
      "svelte/no-store-callbacks": "off",
      "svelte/no-dom-messages": "off",
      "svelte/no-target-blank": "off",
      "svelte/no-shorthand-content": "off",
      "svelte/no-trailing-spaces": "off",
      "svelte/no-extra-html-attributes": "off",
      "svelte/no-useless-attribute": "off",
      "svelte/no-useless-mustaches": "off",
      "svelte/require-each-key": "off",
      "svelte/require-event-dispatcher-types": "off",
      "svelte/require-optimized-style-attribute": "off",
      "svelte/sort-attributes": "off",
      "svelte/system": "off",
      "svelte/valid-each-key": "off",
      "svelte/valid-prop-names": "off",
      "svelte/html-self-closing": "off",
      "svelte/indent": "off",
      "svelte/max-attributes-per-line": "off",
      "svelte/mustache-spacing": "off",
      "svelte/no-spaces-around-equal-signs-in-attribute": "off",
      "svelte/quotes": "off",
      "svelte/shorthand-attribute": "off",
      "svelte/split-attribute-and-directive": "off",
      "svelte/first-attribute-on-new-line": "off",
      "svelte/html-closing-bracket-spacing": "off",
      "svelte/html-indent": "off",
      "svelte/html-quotes": "off",
      "svelte/no-multiple-empty-lines": "off",
      "svelte/no-trailing-spaces-in-tag": "off",
      "svelte/prefer-attribute-shorthand": "off",
      "svelte/prefer-style-directive": "off",
      "svelte/block-lang": "off",
      "svelte/button-has-type": "off",
      "svelte/comment-directive": "off",
      "svelte/derived-has-shallow-dependency": "off",
      "svelte/no-at-debug-tags": "off",
      "svelte/no-const-assign-writable": "off",
      "svelte/no-deprecated-slot-scope": "off",
      "svelte/no-dom-messages": "off",
      "svelte/no-dupe-else-if": "off",
      "svelte/no-export-assign-reactive": "off",
      "svelte/no-extra-html-attributes": "off",
      "svelte/no-inner-declarations": "off",
      "svelte/no-reactive-reassign": "off",
      "svelte/no-shorthand-content": "off",
      "svelte/no-store-callbacks": "off",
      "svelte/no-target-blank": "off",
      "svelte/no-trailing-spaces": "off",
      "svelte/no-unused-svelte-ignore": "off",
      "svelte/no-useless-attribute": "off",
      "svelte/no-useless-mustaches": "off",
      "svelte/prefer-class-directive": "off",
      "svelte/prefer-style-directive": "off",
      "svelte/require-each-key": "off",
      "svelte/require-event-dispatcher-types": "off",
      "svelte/require-optimized-style-attribute": "off",
      "svelte/sort-attributes": "off",
      "svelte/system": "off",
      "svelte/valid-each-key": "off",
      "svelte/valid-prop-names": "off",
      "svelte/html-self-closing": "off",
      "svelte/indent": "off",
      "svelte/max-attributes-per-line": "off",
      "svelte/mustache-spacing": "off",
      "svelte/no-spaces-around-equal-signs-in-attribute": "off",
      "svelte/quotes": "off",
      "svelte/shorthand-attribute": "off",
      "svelte/split-attribute-and-directive": "off",
      "svelte/first-attribute-on-new-line": "off",
      "svelte/html-closing-bracket-spacing": "off",
      "svelte/html-indent": "off",
      "svelte/html-quotes": "off",
      "svelte/no-multiple-empty-lines": "off",
      "svelte/no-trailing-spaces-in-tag": "off",
      "svelte/prefer-attribute-shorthand": "off",
      "svelte/prefer-style-directive": "off",
    },
  },
];
